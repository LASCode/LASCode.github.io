/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktoxin"] = self["webpackChunktoxin"] || []).push([["src_components_carousel_carousel_js-src_components_rooms-dropdown_rooms-dropdown_js"],{

/***/ "./src/components/carousel/carousel.js":
/*!*********************************************!*\
  !*** ./src/components/carousel/carousel.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var owl_carousel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! owl.carousel */ \"./node_modules/owl.carousel/dist/owl.carousel.js\");\n/* harmony import */ var owl_carousel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(owl_carousel__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _rate_button_rate_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rate-button/rate-button */ \"./src/components/rate-button/rate-button.js\");\n/* harmony import */ var _rate_button_rate_button__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_rate_button_rate_button__WEBPACK_IMPORTED_MODULE_1__);\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n\r\n\r\n\r\n$(\".js-carousel\").owlCarousel({\r\n  items: 1,\r\n  nav: true,\r\n  rewind: true,\r\n  navText: [\r\n    '<span class=\"arrow-owl arrow-left\">expand_more</span>',\r\n    '<span class=\"arrow-owl arrow-right\">expand_more</span>'\r\n  ],\r\n})\n\n//# sourceURL=webpack://toxin/./src/components/carousel/carousel.js?");

/***/ }),

/***/ "./src/components/rate-button/rate-button.js":
/*!***************************************************!*\
  !*** ./src/components/rate-button/rate-button.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nconst clearAllStar = (container)=>{\r\n  $(container).find(\".rate-button__star\").each((index, el)=>{\r\n    if ($(el).hasClass('active')){\r\n      $(el).removeClass('active')\r\n    }\r\n  })\r\n}\r\nconst setActiveClassOnStars = (container, count)=>{\r\n  $(container).find(\".rate-button__star\").each((index, el)=>{\r\n    if ($(el).data('index')<=count){\r\n      $(el).addClass(\"active\", true)\r\n    }\r\n  })\r\n}\r\nconst setStar = (container) =>{\r\n  $(container).find(\".rate-button__star\").each((index, el)=>{\r\n    if ($(el).hasClass(\"active\")){\r\n      $(el).html(\"star\")\r\n    }else{\r\n      $(el).html(\"star_border\")\r\n    }\r\n  })\r\n}\r\n\r\nconst rateContainer = $(\".js-rate-button:not(.js-rate-button--readonly)\")\r\n\r\nrateContainer.on(\"click\", (e)=>{\r\n  const target = $(e.target)\r\n  const container = target.closest(\".rate-button\")\r\n\r\n  if (target.hasClass(\"rate-button__star\")){\r\n    const index = target.data(\"index\")\r\n    const input = $(container).find(\".rate-button__input\")\r\n    const isFirstStar = index===1\r\n    const isAlreadyChecked = Number(input.val())===1\r\n\r\n    if (isAlreadyChecked && isFirstStar){\r\n      input.val(0)\r\n      clearAllStar(container)\r\n      setActiveClassOnStars(container, 0)\r\n      setStar(container)\r\n    }else{\r\n      input.val(index)\r\n      clearAllStar(container)\r\n      setActiveClassOnStars(container, index)\r\n      setStar(container)\r\n    }\r\n  }\r\n})\r\nrateContainer.on(\"mouseover\", (e)=>{\r\n  const target = $(e.target)\r\n  const container = target.closest(\".rate-button\")\r\n\r\n  if (target.hasClass(\"rate-button__star\")){\r\n    const index = target.data(\"index\")\r\n    clearAllStar(container)\r\n    setActiveClassOnStars(container, index)\r\n    setStar(container)\r\n  }\r\n})\r\nrateContainer.on(\"mouseleave\", (e)=>{\r\n  const target = $(e.target)\r\n  const container = target.closest(\".rate-button\")\r\n  const starsCount = Number($(container).find(\".rate-button__input\").val())\r\n  clearAllStar(container)\r\n  setActiveClassOnStars(container, starsCount)\r\n  setStar(container)\r\n})\n\n//# sourceURL=webpack://toxin/./src/components/rate-button/rate-button.js?");

/***/ }),

/***/ "./src/components/rooms-dropdown/rooms-dropdown.js":
/*!*********************************************************!*\
  !*** ./src/components/rooms-dropdown/rooms-dropdown.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nconst MAX_VALUE = 5,\r\n      MIN_VALUE = 0,\r\n      DROPDOWN_CLASS = '.dropdown-rooms'\r\n\r\n/**\r\n Получает значение счетчика всех строк в дропдауна, упаковывает в обьект, содержащий:\r\n {\r\n  {\r\n    Значение счетчика: Number\r\n    Функции прибавления\\убавления счетчика\r\n    Функции энейбла\\дизейбла кнопок (отдельно для + и -)\r\n  }\r\n  ...Аналогично для каждой последующей строчки дропдауна\r\n }\r\n Для каждой строки функции уникальны и действуют только на эту строку.\r\n **/\r\nconst getSelectedPersonObj = (container)=>{\r\n  let personObj = {}\r\n  $(container)\r\n    .find('.dropdown-rooms__type-container')\r\n    .each((index, elem)=>{\r\n      const count = Number($(elem).find('.dropdown-rooms__rooms-count').html())\r\n      personObj[$(elem).data('name')] = {\r\n        count: count,\r\n        counter: {\r\n          add(){$(elem).find('.dropdown-rooms__rooms-count').html(count+1)},\r\n          reduce(){$(elem).find('.dropdown-rooms__rooms-count').html(count-1)},\r\n          nullify(){$(elem).find('.dropdown-rooms__rooms-count').html(0)}\r\n        },\r\n        button:{\r\n          positive:{\r\n            disable(){\r\n              $(elem).find('*[data-action=\"add\"]').attr('disabled', true)\r\n            },\r\n            enable(){\r\n              $(elem).find('*[data-action=\"add\"]').attr('disabled', false)\r\n            }\r\n          },\r\n          negative:{\r\n            disable(){\r\n              $(elem).find('*[data-action=\"reduce\"]').attr('disabled', true)\r\n            },\r\n            enable(){\r\n              $(elem).find('*[data-action=\"reduce\"]').attr('disabled', false)\r\n            }\r\n          }\r\n        },\r\n        animate:{\r\n          error(){\r\n            $(elem).closest('.dropdown-rooms__type-container').addClass('dropdown-rooms__type-container--with-quake')\r\n            setTimeout(()=>{\r\n              $(elem).closest('.dropdown-rooms__type-container').removeClass('dropdown-rooms__type-container--with-quake')\r\n            }, 500)\r\n          }\r\n        }\r\n      }\r\n    })\r\n  return personObj\r\n}\r\n/**\r\n Проводит рекурсивный поиск элемента вверх по дереву с data-[data] аттрибутом вплоть до body.\r\n Применяется при диллегировании событий для блоков, имеющих потомков, не имеющих дата-атрибутов.\r\n !ВНИМАНИЕ! Функция выдаст значение первого на пути элемента! Не допускать вложенности элементов с одинаковой [data]\r\n При неудаче возвращает false\r\n При удаче возвращает значение атрибута\r\n **/\r\nconst getDataAttribute = (target, data)=>{\r\n  if ($(target).data(data)){\r\n    return $(target).data(data)\r\n  }else if (![...target.classList].includes('page__body')){\r\n    return getDataAttribute(target.parentElement, data)\r\n  }else{\r\n    return false\r\n  }\r\n}\r\nconst setDefaultValue = (container)=>{\r\n  const dropdownValuesObj = getSelectedPersonObj(container)\r\n  let totalCount = 0\r\n  $.each(dropdownValuesObj, (key)=>{\r\n    if (dropdownValuesObj[key].count !== 0) totalCount++\r\n  })\r\n  if (totalCount!==0){\r\n    actionsFunc.confirm(container)\r\n  }\r\n}\r\nconst disableBadButtons = (container)=>{\r\n  let personObj = getSelectedPersonObj(container)\r\n  $.each(personObj, (key)=>{\r\n    let singlePersonObj = personObj[key]\r\n    console.log(singlePersonObj.count)\r\n    switch (true){\r\n      case singlePersonObj.count !== MAX_VALUE: singlePersonObj.button.positive.enable(); break\r\n      case singlePersonObj.count === MAX_VALUE: singlePersonObj.button.positive.disable(); break\r\n    }\r\n    switch (true){\r\n      case singlePersonObj.count !== MIN_VALUE: singlePersonObj.button.negative.enable(); break\r\n      case singlePersonObj.count === MIN_VALUE: singlePersonObj.button.negative.disable(); break\r\n    }\r\n  })\r\n}\r\nconst declensionOfNum = (number, titles)=> {\r\n  const numArray = [2, 0, 1, 1, 1, 2];\r\n  return titles[\r\n    (number % 100 > 4 && number % 100 < 20)\r\n      ?\r\n      2\r\n      :\r\n      numArray[(number % 10 < 5) ? number % 10 : 5]\r\n    ];\r\n}\r\nconst actionsFunc = {\r\n  confirm(container){\r\n    let personObj = getSelectedPersonObj(container) // Получаем обьект с параметрами и функциями всех строк дропдауна\r\n    const bedrooms = personObj['Спальни'].count,\r\n          beds = personObj['Кровати'].count,\r\n          bathrooms = personObj['Ванные комнаты'].count,\r\n          decl = [['Спальня', 'Спальни', 'Спальнен'], ['Кровать', 'Кровати', 'Кроватей'], ['Ванная комната', 'Ванные комнаты', 'Ванных комнат']]\r\n    let result = `${bedrooms?`${bedrooms} ${declensionOfNum(bedrooms, decl[0])}`:''}`+\r\n                  `${beds?`${bedrooms?', ':''}${beds} ${declensionOfNum(beds, decl[1])}`:''}`+\r\n                  `${bathrooms?`${(bedrooms||beds)?', ':''}${bathrooms} ${declensionOfNum(bathrooms, decl[2])}`:''}`\r\n    $(container).find('.form-input__input').val(result)\r\n  },\r\n  clear(container){},\r\n  add(container, itemName){\r\n    let personObj = getSelectedPersonObj(container)\r\n    personObj[itemName]?.counter.add()\r\n  },\r\n  reduce(container, itemName){\r\n    let personObj = getSelectedPersonObj(container)\r\n    personObj[itemName]?.counter.reduce()\r\n  },\r\n  toggleDropdown(container){\r\n    $(container).toggleClass('form-input--dropdown-expanded')\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n Основные рабочие функции\r\n**/\r\nconst onClick = (e)=>{\r\n  e.preventDefault()\r\n  const target = e.target // Элемент, по которому произошел клик\r\n  const container = $(target).closest('.form-input--with-dropdown') // Главный контейнер инпута\r\n  const action = getDataAttribute(target, 'action') // Дата атрибут элемента, по которому произошел клик\r\n  console.log(action)\r\n\r\n  //обработка кликов по блокам с data-action\r\n  if (action){\r\n    if (action === 'toggleDropdown'){\r\n      actionsFunc.toggleDropdown(container)\r\n    }\r\n    if (action === 'clear'){\r\n      actionsFunc.clear(container)\r\n    }\r\n    if (action === 'confirm'){\r\n      actionsFunc.confirm(container)\r\n    }\r\n    if (action === 'add') {\r\n      const itemName = $(target).closest('.dropdown-rooms__type-container').data('name')\r\n      actionsFunc.add(container, itemName)\r\n      disableBadButtons(container)\r\n      actionsFunc.confirm(container)\r\n    }\r\n    if (action === 'reduce') {\r\n      const itemName = $(target).closest('.dropdown-rooms__type-container').data('name')\r\n      actionsFunc.reduce(container, itemName)\r\n      disableBadButtons(container)\r\n      actionsFunc.confirm(container)\r\n    }\r\n  }\r\n}\r\nconst onKeydown = (e)=> {\r\n  const target = e.target // Элемент, по которому произошел клик\r\n  const key = e.key\r\n  const container = $(target).closest('.form-input--with-dropdown') // Главный контейнер инпута\r\n  console.log(key)\r\n  if ($(target).data(\"action\") === \"toggleDropdown\"){\r\n    if(key===\"Enter\" || key===\"Escape\"){\r\n      actionsFunc.toggleDropdown(container)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n Точка входа\r\n**/\r\nconst initializeAllDropdown = ()=>{\r\n  $(DROPDOWN_CLASS).closest('.form-input--with-dropdown').each((index, element)=>{\r\n    $(element).on('click', onClick)\r\n    $(element).on('keydown', onKeydown)\r\n    setDefaultValue(element)\r\n  })\r\n}\r\ninitializeAllDropdown()\r\n\r\n\n\n//# sourceURL=webpack://toxin/./src/components/rooms-dropdown/rooms-dropdown.js?");

/***/ })

}]);